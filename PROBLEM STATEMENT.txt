===PROBLEM STATEMENT===

In this assignment you implement a generative model for a 1-D classical Ising
chain and use it to predict the model couplers in absence of a knowledge of
them from training data set. The training data set is generated from the
Monte-Carlo simulation of the unknown model. For simplicity we assume the
thermodynamic beta is 1 throughout.

Deadline: End of day (Midnight) Eastern Time Zone Tuesday Feb 25, 2020

Note: The last commit to the master branch before the deadline is used to test
correctness of your code. (Github's timestamp is a strict deadline for
acceptance of your work).

The command to run your code should be of the format

python3 main.py data/in.txt

Any hyperparameters you choose to make available to the user (e.g. learning
rate, batch size, etc.) should be introduced through:

python3 main.py --help

You may also choose to use json parameter files. Should you do so, a sample json
file and documentation on its usage should be clearly explained in README.md of
your repository.

==INPUT FILE==

Your code reads a training data file generated from a 1-D closed Ising chain
defined by the Hamiltonian

H(s)= - \sum_{i, j} s_i * s_j * J_{i, j}

All couplers are generated from a choice of coupler strengths J_{i, j} not
available to your program. But we have some prior knowledge about the model as
follows:

(1) The length of each row in the training data file indicates the size of the
model. (Example: In the provided in.txt the 1-D chain consists of 4 sites.)

(2) The model is a closed loop. For a model with N spins, the spin
configurations are provided in the following fixed order

s_0 s_1 s_2 ... s_N

For example in the provided in.txt the first row -+-+ indicates the spin
configuration (s_0, s_1, s_2, s_4) = (-1, +1, -1, +1).

(3) The model is a 1-D closed loop. So all couplers are between spins s_i
and the nearest neighbour spins s_{i+1 mod N} and s_{i-1 mod N}.

(4) All coupler strengths are either +1 or -1.

==OUTPUT FILE==

Your program generates its best guess of the correct values of all J_{i, j} in
the 1-D chain from which the training dataset was generated. The output is a
dictionary of couplers where keys are pairs of indices and values are the
predicted values for the couplers. For example for the provided dataset in.txt
an acceptable output of your program is

{(0, 1): -1, (1, 2): 1, (2, 3): 1, (3, 0): 1}.

Indeed the example dataset in.txt provided here is generated using Monte-Carlo
simulation of the 1-D Ising model of size 4 with the couplers as in the
dictionary above.

Remark. In a verbose mode of your program, track the KL divergence of the
training dataset with respect to your generative model during the training and
save a plot of its values versus training epochs.
